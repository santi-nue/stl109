name: Build Qt6 Project with CMake on Windows

on:
  workflow_dispatch:
  push:
     tags:
       - 'v*'   # Triggers only on version tags like v1.0.0


jobs:
  build:
    runs-on: windows-latest

    steps:


      - name: Checkout external repo
        uses: actions/checkout@v3
        with:
          repository: LaboratorioGluon/LabPlotter
          path: .

      - name: Install Qt6
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.4.3
          host: windows
          target: desktop
          arch: win64_msvc2019_64
          modules: 'qtserialport'    # add more modules as needed, space-separated
          set-env: 'true'            # ensures CMake can find Qt

      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.2
        with:
          version: '1.3.250.1'  # Use your required version or 'latest'
          cache: true
          
      - name: Install CMake
        uses: lukka/get-cmake@latest

      - name: Configure with CMake
        working-directory: . 
        run: |
          cmake -B build -S . -DCMAKE_PREFIX_PATH="%Qt6_DIR%"

      - name: Build with CMake
        working-directory: . 
        run: |
          cmake --build build --config Release

      - name: Deploy with windeployqt (all exes)
        shell: pwsh
        run: |
          $qtBinDir = "${{ env.Qt6_DIR }}\bin"
          Get-ChildItem -Path build/Release -Filter *.exe | ForEach-Object {
            & "$qtBinDir\windeployqt.exe" "$($_.FullName)" --release
          }


      - name: Zip deployment folder
        run: Compress-Archive -Path build/Release/* -DestinationPath build/myapp.zip

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/myapp.zip
          asset_name: myapp.zip
          asset_content_type: application/zip

